// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.2
// source: schoolcard.proto

package funnel

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CardTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Account         string `protobuf:"bytes,2,opt,name=Account,proto3" json:"Account,omitempty"`
	CardType        string `protobuf:"bytes,3,opt,name=CardType,proto3" json:"CardType,omitempty"`
	TransactionType string `protobuf:"bytes,4,opt,name=TransactionType,proto3" json:"TransactionType,omitempty"`
	Shop            string `protobuf:"bytes,5,opt,name=Shop,proto3" json:"Shop,omitempty"`
	ShopPlace       string `protobuf:"bytes,6,opt,name=ShopPlace,proto3" json:"ShopPlace,omitempty"`
	Terminal        string `protobuf:"bytes,7,opt,name=Terminal,proto3" json:"Terminal,omitempty"`
	Transactions    string `protobuf:"bytes,8,opt,name=Transactions,proto3" json:"Transactions,omitempty"`
	Time            string `protobuf:"bytes,9,opt,name=Time,proto3" json:"Time,omitempty"`
	Wallet          string `protobuf:"bytes,10,opt,name=Wallet,proto3" json:"Wallet,omitempty"`
	Balance         string `protobuf:"bytes,11,opt,name=Balance,proto3" json:"Balance,omitempty"`
}

func (x *CardTransaction) Reset() {
	*x = CardTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schoolcard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardTransaction) ProtoMessage() {}

func (x *CardTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_schoolcard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardTransaction.ProtoReflect.Descriptor instead.
func (*CardTransaction) Descriptor() ([]byte, []int) {
	return file_schoolcard_proto_rawDescGZIP(), []int{0}
}

func (x *CardTransaction) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CardTransaction) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CardTransaction) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *CardTransaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *CardTransaction) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *CardTransaction) GetShopPlace() string {
	if x != nil {
		return x.ShopPlace
	}
	return ""
}

func (x *CardTransaction) GetTerminal() string {
	if x != nil {
		return x.Terminal
	}
	return ""
}

func (x *CardTransaction) GetTransactions() string {
	if x != nil {
		return x.Transactions
	}
	return ""
}

func (x *CardTransaction) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *CardTransaction) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

func (x *CardTransaction) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type SchoolCardCurrentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *SchoolCardCurrentRequest) Reset() {
	*x = SchoolCardCurrentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schoolcard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolCardCurrentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolCardCurrentRequest) ProtoMessage() {}

func (x *SchoolCardCurrentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schoolcard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolCardCurrentRequest.ProtoReflect.Descriptor instead.
func (*SchoolCardCurrentRequest) Descriptor() ([]byte, []int) {
	return file_schoolcard_proto_rawDescGZIP(), []int{1}
}

func (x *SchoolCardCurrentRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SchoolCardCurrentRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SchoolCardCurrentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance string `protobuf:"bytes,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
}

func (x *SchoolCardCurrentReply) Reset() {
	*x = SchoolCardCurrentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schoolcard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolCardCurrentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolCardCurrentReply) ProtoMessage() {}

func (x *SchoolCardCurrentReply) ProtoReflect() protoreflect.Message {
	mi := &file_schoolcard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolCardCurrentReply.ProtoReflect.Descriptor instead.
func (*SchoolCardCurrentReply) Descriptor() ([]byte, []int) {
	return file_schoolcard_proto_rawDescGZIP(), []int{2}
}

func (x *SchoolCardCurrentReply) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type SchoolCardTodayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *SchoolCardTodayRequest) Reset() {
	*x = SchoolCardTodayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schoolcard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolCardTodayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolCardTodayRequest) ProtoMessage() {}

func (x *SchoolCardTodayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schoolcard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolCardTodayRequest.ProtoReflect.Descriptor instead.
func (*SchoolCardTodayRequest) Descriptor() ([]byte, []int) {
	return file_schoolcard_proto_rawDescGZIP(), []int{3}
}

func (x *SchoolCardTodayRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SchoolCardTodayRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SchoolCardTodayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*CardTransaction `protobuf:"bytes,1,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
}

func (x *SchoolCardTodayReply) Reset() {
	*x = SchoolCardTodayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schoolcard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolCardTodayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolCardTodayReply) ProtoMessage() {}

func (x *SchoolCardTodayReply) ProtoReflect() protoreflect.Message {
	mi := &file_schoolcard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolCardTodayReply.ProtoReflect.Descriptor instead.
func (*SchoolCardTodayReply) Descriptor() ([]byte, []int) {
	return file_schoolcard_proto_rawDescGZIP(), []int{4}
}

func (x *SchoolCardTodayReply) GetTransactions() []*CardTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type SchoolCardHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *SchoolCardHistoryRequest) Reset() {
	*x = SchoolCardHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schoolcard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolCardHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolCardHistoryRequest) ProtoMessage() {}

func (x *SchoolCardHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schoolcard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolCardHistoryRequest.ProtoReflect.Descriptor instead.
func (*SchoolCardHistoryRequest) Descriptor() ([]byte, []int) {
	return file_schoolcard_proto_rawDescGZIP(), []int{5}
}

func (x *SchoolCardHistoryRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SchoolCardHistoryRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SchoolCardHistoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*CardTransaction `protobuf:"bytes,1,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
}

func (x *SchoolCardHistoryReply) Reset() {
	*x = SchoolCardHistoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schoolcard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolCardHistoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolCardHistoryReply) ProtoMessage() {}

func (x *SchoolCardHistoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_schoolcard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolCardHistoryReply.ProtoReflect.Descriptor instead.
func (*SchoolCardHistoryReply) Descriptor() ([]byte, []int) {
	return file_schoolcard_proto_rawDescGZIP(), []int{6}
}

func (x *SchoolCardHistoryReply) GetTransactions() []*CardTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_schoolcard_proto protoreflect.FileDescriptor

var file_schoolcard_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x22, 0xb9, 0x02, 0x0a, 0x0f,
	0x43, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53,
	0x68, 0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x22, 0x0a,
	0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x52, 0x0a, 0x18, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x53,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x50, 0x0a, 0x16, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x54, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x0c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x52, 0x0a, 0x18, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x56, 0x0a, 0x16, 0x53,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x32, 0x9e, 0x02, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43, 0x61,
	0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x11, 0x53, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x21,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43, 0x61,
	0x72, 0x64, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x1f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x64, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x11, 0x53, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x21,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43,
	0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x66, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schoolcard_proto_rawDescOnce sync.Once
	file_schoolcard_proto_rawDescData = file_schoolcard_proto_rawDesc
)

func file_schoolcard_proto_rawDescGZIP() []byte {
	file_schoolcard_proto_rawDescOnce.Do(func() {
		file_schoolcard_proto_rawDescData = protoimpl.X.CompressGZIP(file_schoolcard_proto_rawDescData)
	})
	return file_schoolcard_proto_rawDescData
}

var file_schoolcard_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_schoolcard_proto_goTypes = []interface{}{
	(*CardTransaction)(nil),          // 0: library.CardTransaction
	(*SchoolCardCurrentRequest)(nil), // 1: library.SchoolCardCurrentRequest
	(*SchoolCardCurrentReply)(nil),   // 2: library.SchoolCardCurrentReply
	(*SchoolCardTodayRequest)(nil),   // 3: library.SchoolCardTodayRequest
	(*SchoolCardTodayReply)(nil),     // 4: library.SchoolCardTodayReply
	(*SchoolCardHistoryRequest)(nil), // 5: library.SchoolCardHistoryRequest
	(*SchoolCardHistoryReply)(nil),   // 6: library.SchoolCardHistoryReply
}
var file_schoolcard_proto_depIdxs = []int32{
	0, // 0: library.SchoolCardTodayReply.Transactions:type_name -> library.CardTransaction
	0, // 1: library.SchoolCardHistoryReply.Transactions:type_name -> library.CardTransaction
	1, // 2: library.SchoolCardService.SchoolCardCurrent:input_type -> library.SchoolCardCurrentRequest
	3, // 3: library.SchoolCardService.SchoolCardToday:input_type -> library.SchoolCardTodayRequest
	5, // 4: library.SchoolCardService.SchoolCardHistory:input_type -> library.SchoolCardHistoryRequest
	2, // 5: library.SchoolCardService.SchoolCardCurrent:output_type -> library.SchoolCardCurrentReply
	4, // 6: library.SchoolCardService.SchoolCardToday:output_type -> library.SchoolCardTodayReply
	6, // 7: library.SchoolCardService.SchoolCardHistory:output_type -> library.SchoolCardHistoryReply
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_schoolcard_proto_init() }
func file_schoolcard_proto_init() {
	if File_schoolcard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schoolcard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schoolcard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolCardCurrentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schoolcard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolCardCurrentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schoolcard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolCardTodayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schoolcard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolCardTodayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schoolcard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolCardHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schoolcard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolCardHistoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schoolcard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schoolcard_proto_goTypes,
		DependencyIndexes: file_schoolcard_proto_depIdxs,
		MessageInfos:      file_schoolcard_proto_msgTypes,
	}.Build()
	File_schoolcard_proto = out.File
	file_schoolcard_proto_rawDesc = nil
	file_schoolcard_proto_goTypes = nil
	file_schoolcard_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SchoolCardServiceClient is the client API for SchoolCardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchoolCardServiceClient interface {
	SchoolCardCurrent(ctx context.Context, in *SchoolCardCurrentRequest, opts ...grpc.CallOption) (*SchoolCardCurrentReply, error)
	SchoolCardToday(ctx context.Context, in *SchoolCardTodayRequest, opts ...grpc.CallOption) (*SchoolCardTodayReply, error)
	SchoolCardHistory(ctx context.Context, in *SchoolCardHistoryRequest, opts ...grpc.CallOption) (*SchoolCardHistoryReply, error)
}

type schoolCardServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSchoolCardServiceClient(cc grpc.ClientConnInterface) SchoolCardServiceClient {
	return &schoolCardServiceClient{cc}
}

func (c *schoolCardServiceClient) SchoolCardCurrent(ctx context.Context, in *SchoolCardCurrentRequest, opts ...grpc.CallOption) (*SchoolCardCurrentReply, error) {
	out := new(SchoolCardCurrentReply)
	err := c.cc.Invoke(ctx, "/library.SchoolCardService/SchoolCardCurrent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schoolCardServiceClient) SchoolCardToday(ctx context.Context, in *SchoolCardTodayRequest, opts ...grpc.CallOption) (*SchoolCardTodayReply, error) {
	out := new(SchoolCardTodayReply)
	err := c.cc.Invoke(ctx, "/library.SchoolCardService/SchoolCardToday", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schoolCardServiceClient) SchoolCardHistory(ctx context.Context, in *SchoolCardHistoryRequest, opts ...grpc.CallOption) (*SchoolCardHistoryReply, error) {
	out := new(SchoolCardHistoryReply)
	err := c.cc.Invoke(ctx, "/library.SchoolCardService/SchoolCardHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchoolCardServiceServer is the server API for SchoolCardService service.
type SchoolCardServiceServer interface {
	SchoolCardCurrent(context.Context, *SchoolCardCurrentRequest) (*SchoolCardCurrentReply, error)
	SchoolCardToday(context.Context, *SchoolCardTodayRequest) (*SchoolCardTodayReply, error)
	SchoolCardHistory(context.Context, *SchoolCardHistoryRequest) (*SchoolCardHistoryReply, error)
}

// UnimplementedSchoolCardServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSchoolCardServiceServer struct {
}

func (*UnimplementedSchoolCardServiceServer) SchoolCardCurrent(context.Context, *SchoolCardCurrentRequest) (*SchoolCardCurrentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchoolCardCurrent not implemented")
}
func (*UnimplementedSchoolCardServiceServer) SchoolCardToday(context.Context, *SchoolCardTodayRequest) (*SchoolCardTodayReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchoolCardToday not implemented")
}
func (*UnimplementedSchoolCardServiceServer) SchoolCardHistory(context.Context, *SchoolCardHistoryRequest) (*SchoolCardHistoryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchoolCardHistory not implemented")
}

func RegisterSchoolCardServiceServer(s *grpc.Server, srv SchoolCardServiceServer) {
	s.RegisterService(&_SchoolCardService_serviceDesc, srv)
}

func _SchoolCardService_SchoolCardCurrent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchoolCardCurrentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchoolCardServiceServer).SchoolCardCurrent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/library.SchoolCardService/SchoolCardCurrent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchoolCardServiceServer).SchoolCardCurrent(ctx, req.(*SchoolCardCurrentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchoolCardService_SchoolCardToday_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchoolCardTodayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchoolCardServiceServer).SchoolCardToday(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/library.SchoolCardService/SchoolCardToday",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchoolCardServiceServer).SchoolCardToday(ctx, req.(*SchoolCardTodayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchoolCardService_SchoolCardHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchoolCardHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchoolCardServiceServer).SchoolCardHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/library.SchoolCardService/SchoolCardHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchoolCardServiceServer).SchoolCardHistory(ctx, req.(*SchoolCardHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SchoolCardService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "library.SchoolCardService",
	HandlerType: (*SchoolCardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SchoolCardCurrent",
			Handler:    _SchoolCardService_SchoolCardCurrent_Handler,
		},
		{
			MethodName: "SchoolCardToday",
			Handler:    _SchoolCardService_SchoolCardToday_Handler,
		},
		{
			MethodName: "SchoolCardHistory",
			Handler:    _SchoolCardService_SchoolCardHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schoolcard.proto",
}
